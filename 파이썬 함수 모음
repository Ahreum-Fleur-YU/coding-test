1. 입출력 관련 함수
input(): 사용자로부터 입력을 받을 때 사용.
print(): 값을 출력할 때 사용.
map(): 여러 값을 한 번에 변환할 때 사용. 주로 input().split()과 함께 사용되어 입력값을 나누고 정수형으로 변환하는 데 자주 사용됨.
split(): 문자열을 공백이나 특정 기준으로 나눌 때 사용.

2. 자료형 변환 함수
int(): 문자열이나 실수를 정수로 변환.
float(): 문자열이나 정수를 실수로 변환.
str(): 정수나 실수를 문자열로 변환.
list(): 시퀀스(튜플 등)를 리스트로 변환.
tuple(): 리스트를 튜플로 변환.

3. 수학 관련 함수
abs(): 절대값을 구할 때 사용.
max(): 여러 값 중 가장 큰 값을 찾을 때 사용.
min(): 여러 값 중 가장 작은 값을 찾을 때 사용.
sum(): 리스트나 튜플 등의 합계를 구할 때 사용.
pow(x, y): x의 y 거듭제곱을 구할 때 사용. (x^y)
round(): 반올림할 때 사용.

4. 리스트 관련 함수
append(): 리스트에 요소를 추가할 때 사용.
extend(): 리스트에 다른 리스트나 시퀀스의 요소를 추가할 때 사용.
insert(): 특정 위치에 값을 삽입할 때 사용.
pop(): 리스트의 마지막 요소를 제거하고 반환할 때 사용.
remove(): 리스트에서 특정 값을 제거할 때 사용.
sort(): 리스트를 정렬할 때 사용.
reverse(): 리스트를 뒤집을 때 사용.
len(): 리스트나 문자열의 길이를 구할 때 사용.

5. 집합(Set) 관련 함수
add(): 집합에 값을 추가할 때 사용.
remove(): 집합에서 특정 값을 제거할 때 사용.
union(): 두 집합의 합집합을 구할 때 사용.
intersection(): 두 집합의 교집합을 구할 때 사용.
difference(): 두 집합의 차집합을 구할 때 사용.

6. 문자열 관련 함수
upper(): 문자열을 모두 대문자로 변환.
lower(): 문자열을 모두 소문자로 변환.
replace(): 문자열의 특정 부분을 다른 문자열로 대체할 때 사용.
find(): 문자열에서 특정 문자가 처음 나오는 위치를 찾을 때 사용.
join(): 리스트의 요소들을 하나의 문자열로 결합할 때 사용.
strip(): 문자열의 앞뒤 공백을 제거할 때 사용.

7. 조건문과 반복문
if-elif-else: 조건에 따라 다른 코드를 실행할 때 사용.
for: 시퀀스나 반복 가능한 객체를 순회할 때 사용.
while: 조건이 참인 동안 코드를 반복 실행할 때 사용.

8. 기타
enumerate(): 반복문에서 인덱스와 값을 동시에 사용할 때 사용.
zip(): 두 개 이상의 리스트나 시퀀스를 동시에 순회할 때 사용.
filter(): 조건을 만족하는 요소들만 추출할 때 사용.
map(): 리스트나 시퀀스의 요소에 함수를 적용할 때 사용.
lambda: 짧은 익명 함수를 만들 때 사용.
any(): 시퀀스 내에서 하나라도 참이면 참을 반환.
all(): 시퀀스 내 모든 값이 참이면 참을 반환.

9. 모듈
math: 여러 수학적인 함수 (예: math.sqrt(), math.factorial() 등).
itertools: 순열, 조합 등을 구할 때 유용한 모듈.
collections: 기본적인 데이터 구조들(예: deque, Counter)을 제공하는 모듈.
